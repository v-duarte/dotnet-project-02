@page "/estudiantescursosfin"
@inject ListarEstudiantesUseCase ListarEstudiantesUseCase
@inject ListarCursosUseCase ListarCursosUseCase
@inject ListarInscripcionesUseCase ListarInscripcionesUseCase
@inject IJSRuntime JsRuntime;
<div><i class="fa fa-align-center" aria-hidden="true"><h3>Listado de estudiantes que han finalizado algun curso</h3></i></div>
<table class="table">
    <thead>
        <tr>
            <th>CURSO</th>
            <th>DNI</th>
            <th>APELLIDO</th>
            <th>NOMBRE</th>
        </tr>
    </thead>
    <tbody>
    @{
        var _lista = _cursosActual.Join(_inscripciones, c => c.Titulo, i => i.Titulo,
                                    (c,i) => new {
                                        Titulo = c.Titulo,
                                        DNI = i.DNI
                                    }).Join(_estudiantes, l=> l.DNI, e=> e.DNI,
                                    (l,e) => new {
                                        Curso = l.Titulo,
                                        DNI = e.DNI,
                                        Apellido = e.Apellido,
                                        Nombre = e.Nombre
                                    });
        foreach (var listado in @_lista)
            {
                <tr>
                    <td>@listado.Curso </td>
                    <td>@listado.DNI</td>
                    <td>@listado.Apellido</td>
                    <td>@listado.Nombre</td>
                </tr>
            }
    }
    </tbody>
</table>
<button class="btn btn-primary" href="javascript:void(0);" onclick="history.go(-1);">Volver</button>

@code {
    List<Estudiante> _estudiantes = new List<Estudiante>();
    List<Curso> _cursos = new List<Curso>();
    List<Inscripcion> _inscripciones = new List<Inscripcion>();
    List<Curso> _cursosActual = new List<Curso>();

    protected override void OnInitialized()
    {
        _estudiantes = ListarEstudiantesUseCase.Ejecutar();
        _cursos = ListarCursosUseCase.Ejecutar();
        _inscripciones = ListarInscripcionesUseCase.Ejecutar();
        DateTime hoy = DateTime.Today;
        foreach (var curso in _cursos){
            DateTime finCurso = Convert.ToDateTime(curso.FechaDeFinalizacion);
            if (DateTime.Compare(hoy, finCurso) > 0 ){
                _cursosActual.Add(curso);
            }
        }
    }
}